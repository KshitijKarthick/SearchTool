/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author kshitijkarthick
 */
import java.util.LinkedList;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
public class mainWindow extends javax.swing.JFrame {

    /**
     * Creates new form mainWindow
     */
    public mainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputWindow = new javax.swing.JTextArea();
        buttonSearch = new javax.swing.JButton();
        buttonPatternContains = new javax.swing.JToggleButton();
        buttonPatternEnds = new javax.swing.JToggleButton();
        buttonRegExPattern = new javax.swing.JToggleButton();
        inputTextField = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        outputWindow.setColumns(20);
        outputWindow.setRows(5);
        outputWindow.setText("Output Window");
        jScrollPane1.setViewportView(outputWindow);

        buttonSearch.setText("Search");
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        buttonGroup1.add(buttonPatternContains);
        buttonPatternContains.setSelected(true);
        buttonPatternContains.setText("Pattern Contains");
        buttonPatternContains.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPatternContainsActionPerformed(evt);
            }
        });

        buttonGroup1.add(buttonPatternEnds);
        buttonPatternEnds.setText("Pattern Ends");
        buttonPatternEnds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPatternEndsActionPerformed(evt);
            }
        });

        buttonGroup1.add(buttonRegExPattern);
        buttonRegExPattern.setText("Reg Expression");
        buttonRegExPattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegExPatternActionPerformed(evt);
            }
        });

        inputTextField.setText("    Input String");

        buttonBrowse.setText("Browse");
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonRegExPattern, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonPatternContains, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonPatternEnds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBrowse))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonSearch)
                            .addComponent(buttonBrowse)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(buttonPatternContains)
                        .addGap(12, 12, 12)
                        .addComponent(buttonPatternEnds)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonRegExPattern)))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Search", jPanel1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Other Functionality", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        // TODO add your handling code here:
        jFileChooser1.showOpenDialog(this);
        files.setPath(jFileChooser1.getCurrentDirectory().getAbsolutePath());
    }//GEN-LAST:event_buttonBrowseActionPerformed

    private void buttonRegExPatternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegExPatternActionPerformed
        // TODO add your handling code here:
        inputTextField.setText(" Reg Exp Notation");
        choice=3;
    }//GEN-LAST:event_buttonRegExPatternActionPerformed

    private void buttonPatternEndsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPatternEndsActionPerformed
        // TODO add your handling code here:
        inputTextField.setText("    Input String");
        choice=2;
    }//GEN-LAST:event_buttonPatternEndsActionPerformed

    private void buttonPatternContainsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPatternContainsActionPerformed
        // TODO add your handling code here:
        inputTextField.setText("    Input String");
        choice=1;
    }//GEN-LAST:event_buttonPatternContainsActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        // TODO add your handling code here:
        userChoice(choice);
    }//GEN-LAST:event_buttonSearchActionPerformed
    
    private void displayFileList(LinkedList list){
        outputWindow.setText("Output Window:");
        int length=list.size();
        File file;
        for(int i=0;i<length;i++){
            file=(File) list.removeFirst();
            try {
                outputWindow.setText(outputWindow.getText()+"\n\nFilename: "+file.getName()+"\t\tPath: "+file.getCanonicalPath());
            } catch (IOException ex) {
                Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void userChoice(int choice){
        String text=inputTextField.getText();
        LinkedList list;
        switch(choice){
            case 1:{
                if(text.compareTo("    Input String")!=0){
                    list=files.containsPattern(text);
                }
                else{
                    outputWindow.setText("Please Input a String:");
                    return;
                }
                break;
            }
            case 2:{
                if(text.compareTo("    Input String")!=0){
                    list=files.endsWithPattern(text);
                }
                else{
                    outputWindow.setText("Please Input a String:");
                    return;
                }
                break;
            }
            case 3:{
                if(text.compareTo(" Reg Exp Notation")!=0){
                    list=files.regExPattern(text);
                }
                else{
                    outputWindow.setText("Please Input a Reg Exp Notation:");
                    return;
                }
                break;
            }
            default:{
                outputWindow.setText("Error Invalid Choice.");
                return;
            }     
        }
        displayFileList(list);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainWindow().setVisible(true);
            }
        });
    }
    FileMatcher files=new FileMatcher(".");
    int choice=1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowse;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JToggleButton buttonPatternContains;
    private javax.swing.JToggleButton buttonPatternEnds;
    private javax.swing.JToggleButton buttonRegExPattern;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea outputWindow;
    // End of variables declaration//GEN-END:variables
}
